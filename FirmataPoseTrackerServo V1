from cvzone.PoseModule import PoseDetector
import cv2
from pyfirmata import ArduinoNano, SERVO
from time import sleep

#######################################################################################################################
# Arduino Config
port = 'COM5'
pin = 3
board = ArduinoNano(port)
sleep(2)

board.digital[pin].mode = SERVO

# Parameter for Tracking Leeway
parameter = 40

# Video Capture Config
cap = cv2.VideoCapture(0)
detector = PoseDetector()

# Servo Config
currentServoPos = 90

#######################################################################################################################
# Video Properties
width = cap.get(3)  # 640p
height = cap.get(4)  # 480p
width_center = width/2  # 320p
height_center = height/2  # 240p

# Tracking Initialising
xLandmarkMiddle = 0
yLandmarkMiddle = 0

#######################################################################################################################
while True:
    success, img = cap.read()
    img = detector.findPose(img)
    lmList, bboxInfo = detector.findPosition(img, bboxWithHands=False)

    # Shows the current Servo Position, X and Y Value
    cv2.putText(img, "Servo Pos: " + str(currentServoPos), (20, 50), cv2.FONT_HERSHEY_PLAIN, 2, (255, 255, 255), 2)
    cv2.putText(img, "x: " + str(xLandmarkMiddle), (20, 100), cv2.FONT_HERSHEY_PLAIN, 2, (255, 255, 255), 2)
    cv2.putText(img, "y: " + str(yLandmarkMiddle), (20, 150), cv2.FONT_HERSHEY_PLAIN, 2, (255, 255, 255), 2)

    if bboxInfo:
        center = bboxInfo["center"]
        cv2.circle(img, center, 5, (255, 0, 255), cv2.FILLED)

        # Landmark Coordinaten Schultern
        xLandmarkLeft = lmList[11][1]
        yLandmarkLeft = lmList[11][2]
        xLandmarkRight = lmList[12][1]
        yLandmarkRight = lmList[12][2]

        xLandmarkMiddle = (xLandmarkRight - xLandmarkLeft)/2 + xLandmarkLeft
        yLandmarkMiddle = (yLandmarkRight - yLandmarkLeft)/2 + yLandmarkLeft

#######################################################################################################################
        #  go to Standard Position 90 deg
        #board.digital[pin].write(currentServoPos)

        # Horizontal Tracking
        # Person on the right side of the frame
        if int(xLandmarkMiddle) > width_center + parameter:
            if currentServoPos > 0:
                currentServoPos = currentServoPos - 1
            else:
                currentServoPos = currentServoPos + 1

        # Person on the left side of the frame
        elif int(xLandmarkMiddle) < width_center - parameter:
            if currentServoPos < 180:
                currentServoPos = currentServoPos + 1
            else:
                currentServoPos = currentServoPos - 1
        # Person in the middle of the frame
        else:
            print("middle")

    # move Servo to correct Position
    board.digital[pin].write(currentServoPos)

    # show Video
    cv2.imshow("Image", img)

#######################################################################################################################

    #close everything with Hotkey: q
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
